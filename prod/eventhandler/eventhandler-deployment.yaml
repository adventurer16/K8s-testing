apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-elasticsearch-eventhandler-deployment
  labels:
    app: eventhandler
spec:
  replicas: 1
  selector:
    matchLabels:
      app: eventhandler
  template:
    metadata:
      labels:
        app: eventhandler
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: worker
                operator: In
                values:
                - worker1  # Ensure the deployment runs on worker1 only
      restartPolicy: Always
      containers:
      - name: zookeeper
        image: confluentinc/cp-zookeeper:7.4.0
        securityContext:
          runAsUser: 1000
          runAsGroup: 1000
          allowPrivilegeEscalation: false
          capabilities:
            drop: ["ALL"]
        ports:
        - containerPort: 2181  # Standard ZooKeeper client port
        env:
        - name: ZOOKEEPER_SERVER_ID
          value: "1"
        - name: ZOOKEEPER_CLIENT_PORT
          value: "2181"
        - name: ZOOKEEPER_TICK_TIME
          value: "2000"
        - name: ZOOKEEPER_INIT_LIMIT
          value: "5"
        - name: ZOOKEEPER_SYNC_LIMIT
          value: "2"
        - name: ZOOKEEPER_STANDALONE_ENABLED
          value: "true"
        resources:
          requests:
            cpu: "500m"
            memory: "512Mi"
          limits:
            cpu: "1"
            memory: "1Gi"  
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - echo ruok | nc 127.0.0.1 2181
          initialDelaySeconds: 120
          periodSeconds: 20
          failureThreshold: 5

      - name: broker-1
        image: confluentinc/cp-kafka:7.4.0
        securityContext:
          runAsUser: 1000
          runAsGroup: 1000
          allowPrivilegeEscalation: false
          capabilities:
            drop: ["ALL"]
        ports:
        - containerPort: 9091
        env:
        - name: KAFKA_BROKER_ID
          value: "1"
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: "localhost:2181"
        - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
          value: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
        - name: KAFKA_INTER_BROKER_LISTENER_NAME
          value: "INTERNAL"
        - name: KAFKA_ADVERTISED_LISTENERS
          value: "INTERNAL://localhost:29091,EXTERNAL://localhost:9091"
        - name: KAFKA_LISTENERS
          value: "INTERNAL://0.0.0.0:29091,EXTERNAL://0.0.0.0:9091"
        - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
          value: "1"
        - name: KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
          value: "1"
        - name: KAFKA_TRANSACTION_STATE_LOG_MIN_ISR
          value: "1"
      
      - name: eventhandler
        image: rabebhamd/eventhandler-service:prod
        securityContext:
          runAsUser: 0
          runAsGroup: 0
          allowPrivilegeEscalation: false
          capabilities:
            drop: ["ALL"]
        imagePullPolicy: Always
        ports:
        - containerPort: 4000
        env:
        - name: MONGO_URI
          value: "mongodb://admin:147zaah@mongo-service-test:27017/db_indexation?authSource=admin" 
        - name: ELASTICSEARCH_NODE
          value: "http://elasticsearch-service:9200"
        
      volumes:
      - name: app-env
        emptyDir: {}
